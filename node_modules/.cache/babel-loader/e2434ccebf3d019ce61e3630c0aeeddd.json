{"remainingRequest":"G:\\code21\\ruoyi\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js!G:\\code21\\ruoyi\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\code21\\ruoyi\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\code21\\ruoyi\\ruoyi-ui\\src\\components\\ThemePicker\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\code21\\ruoyi\\ruoyi-ui\\src\\components\\ThemePicker\\index.vue","mtime":1615086407000},{"path":"G:\\code21\\ruoyi\\ruoyi-ui\\babel.config.js","mtime":1615086407000},{"path":"G:\\code21\\ruoyi\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645088178179},{"path":"G:\\code21\\ruoyi\\ruoyi-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1645088179499},{"path":"G:\\code21\\ruoyi\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645088178179},{"path":"G:\\code21\\ruoyi\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1645088184792}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["version","require","ORIGINAL_THEME","data","chalk","theme","computed","defaultTheme","$store","state","settings","watch","handler","val","oldVal","immediate","themeCluster","getThemeCluster","replace","originalCluster","console","log","$message","message","customClass","type","duration","iconClass","getHandler","variable","id","newStyle","updateStyle","styleTag","document","getElementById","createElement","setAttribute","head","appendChild","innerText","url","getCSSString","chalkHandler","styles","slice","call","querySelectorAll","filter","text","style","RegExp","test","forEach","$emit","close","methods","oldCluster","newCluster","color","index","Promise","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","resolve","open","send","tintColor","tint","red","parseInt","green","blue","join","Math","round","toString","shadeColor","shade","clusters","i","push","Number","toFixed"],"sourceRoot":"src/components/ThemePicker","sources":["G:/code21/ruoyi/ruoyi-ui/src/components/ThemePicker/index.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\r\nconst ORIGINAL_THEME = '#409EFF' // default color\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      chalk: '', // content of theme-chalk css\r\n      theme: ''\r\n    }\r\n  },\r\n  computed: {\r\n    defaultTheme() {\r\n      return this.$store.state.settings.theme\r\n    }\r\n  },\r\n  watch: {\r\n    defaultTheme: {\r\n      handler: function(val, oldVal) {\r\n        this.theme = val\r\n      },\r\n      immediate: true\r\n    },\r\n    async theme(val) {\r\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\r\n      if (typeof val !== 'string') return\r\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\r\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\r\n      console.log(themeCluster, originalCluster)\r\n\r\n      const $message = this.$message({\r\n        message: '  Compiling the theme',\r\n        customClass: 'theme-message',\r\n        type: 'success',\r\n        duration: 0,\r\n        iconClass: 'el-icon-loading'\r\n      })\r\n\r\n      const getHandler = (variable, id) => {\r\n        return () => {\r\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\r\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\r\n\r\n          let styleTag = document.getElementById(id)\r\n          if (!styleTag) {\r\n            styleTag = document.createElement('style')\r\n            styleTag.setAttribute('id', id)\r\n            document.head.appendChild(styleTag)\r\n          }\r\n          styleTag.innerText = newStyle\r\n        }\r\n      }\r\n\r\n      if (!this.chalk) {\r\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\r\n        await this.getCSSString(url, 'chalk')\r\n      }\r\n\r\n      const chalkHandler = getHandler('chalk', 'chalk-style')\r\n\r\n      chalkHandler()\r\n\r\n      const styles = [].slice.call(document.querySelectorAll('style'))\r\n        .filter(style => {\r\n          const text = style.innerText\r\n          return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\r\n        })\r\n      styles.forEach(style => {\r\n        const { innerText } = style\r\n        if (typeof innerText !== 'string') return\r\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\r\n      })\r\n\r\n      this.$emit('change', val)\r\n\r\n      $message.close()\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    updateStyle(style, oldCluster, newCluster) {\r\n      let newStyle = style\r\n      oldCluster.forEach((color, index) => {\r\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\r\n      })\r\n      return newStyle\r\n    },\r\n\r\n    getCSSString(url, variable) {\r\n      return new Promise(resolve => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState === 4 && xhr.status === 200) {\r\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\r\n            resolve()\r\n          }\r\n        }\r\n        xhr.open('GET', url)\r\n        xhr.send()\r\n      })\r\n    },\r\n\r\n    getThemeCluster(theme) {\r\n      const tintColor = (color, tint) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        if (tint === 0) { // when primary color is in its rgb space\r\n          return [red, green, blue].join(',')\r\n        } else {\r\n          red += Math.round(tint * (255 - red))\r\n          green += Math.round(tint * (255 - green))\r\n          blue += Math.round(tint * (255 - blue))\r\n\r\n          red = red.toString(16)\r\n          green = green.toString(16)\r\n          blue = blue.toString(16)\r\n\r\n          return `#${red}${green}${blue}`\r\n        }\r\n      }\r\n\r\n      const shadeColor = (color, shade) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        red = Math.round((1 - shade) * red)\r\n        green = Math.round((1 - shade) * green)\r\n        blue = Math.round((1 - shade) * blue)\r\n\r\n        red = red.toString(16)\r\n        green = green.toString(16)\r\n        blue = blue.toString(16)\r\n\r\n        return `#${red}${green}${blue}`\r\n      }\r\n\r\n      const clusters = [theme]\r\n      for (let i = 0; i <= 9; i++) {\r\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\r\n      }\r\n      clusters.push(shadeColor(theme, 0.1))\r\n      return clusters\r\n    }\r\n  }\r\n}\r\n"]}]}